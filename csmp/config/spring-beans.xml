<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
       <!-- 启动注解扫描 会扫描指定包及其子包下的所有bean -->
       <context:component-scan base-package="com.moutum.csmp"/>
       
       <beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <beans:property name="locations">
                <beans:list>
                    <beans:value>classpath:jdbc.properties</beans:value>
                </beans:list>
            </beans:property>
       </beans:bean>

       <!-- 配置数据源 dbcp-->
       <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
           <property name="driverClassName" value="${jdbc.driverClass}"/>  
		   <property name="url" value="${jdbc.url}"/>  
           <property name="username" value="${jdbc.username}"/>  
           <property name="password" value="${jdbc.password}"/>  
           <!--初始化时创建的连接数量-->  
           <property name="initialSize" value="15"/>
           <!--池里不会被释放的最多空闲连接数量。设置为0时表示无限制-->  
           <property name="maxIdle" value="20"/>  
           <!--在不新建连接的条件下，池中保持最少的空闲连接数-->  
           <property name="minIdle" value="10"/>  
           <!--同一时间可以从池分配的最多连接数量。设置为0时表示无限制-->  
           <property name="maxActive" value="300"/>  
           <!--是否自动回收超时连接-->  
           <property name="removeAbandoned" value="true"/>  
           <!--超时时间(以秒数为单位) -->  
           <property name="removeAbandonedTimeout" value="90"/>  
           <!--在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待-->  
           <property name="maxWait" value="3000"/>
           <property name="validationQuery">  
			   <value>SELECT 1 FROM DUAL</value>
           </property>
           <!-- 表示从连接池中获取连接前是否运行validationQuery，true=运行[默认]，false=不运行 --> 
           <property name="testOnBorrow">  
			   <value>true</value>  
           </property>
           <!-- 表示将连接归还连接池前是否运行validationQuery，true=运行，false=不运行[默认] -->
           <property name="testOnReturn">
			   <value>false</value>  
           </property>
       </beans:bean>
       
       <!-- 配置数据源 c3p0-->
       <!--<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${jdbc.driverClass}"/>
			<property name="jdbcUrl" value="${jdbc.url}"/>
			<property name="user" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>-->
			<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 10-->
			<!--<property name="initialPoolSize" value="100"/>-->
			<!--连接池中保留的最小连接数。-->
			<!--<property name="minPoolSize" value="50"/>-->
			<!--连接池中保留的最大连接数。Default: 15 -->
			<!--<property name="maxPoolSize" value="200"/>-->
			<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
			<!--<property name="maxIdleTime" value="60"/>-->
			<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 5 -->
			<!--<property name="acquireIncrement" value="25"/>	-->
			<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
			<!--<property name="idleConnectionTestPeriod" value="60"/>-->
	   <!-- </beans:bean>-->
        
        
       <!-- 配置数据源 proxool-->
       <!-- <beans:bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
            <property name="driver" value="${jdbc.driverClass}"/>
            <property name="driverUrl" value="${jdbc.url}"/>
            <property name="user" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>-->
            <!-- 最少保持的空闲连接数 （默认2个）-->
            <!-- <property name="prototypeCount" value="5"/> -->
            <!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁默认30秒） -->
            <!-- <property name="houseKeepingSleepTime" value="90000"/>-->
            <!-- 最小连接数 （默认2个） -->
            <!-- <property name="minimumConnectionCount" value="15"/>-->
            <!-- 允许最大连接数 -->
            <!-- <property name="maximumConnectionCount" value="50"/>-->
	   <!-- </beans:bean>-->
	    
       <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
       </beans:bean>
       <!-- 配置事务管理器  -->
       <beans:bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
	   	    <property name="sessionFactory" ref="sessionFactory"/>
	   </beans:bean>
	   
	   <!--配置事务 事务细节 ：事务的传播特性 -->
	   <tx:advice id="txadvice" transaction-manager="txManager">
	       <tx:attributes>
	           <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
	           <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
	           <tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
	           <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
	           <tx:method name="move*" propagation="REQUIRED"/>
	           <tx:method name="del*" propagation="REQUIRED"/>
	           <tx:method name="*" read-only="true"/>
	       </tx:attributes>
	   </tx:advice>
	   
	   <!-- 配置参与事务的类  -->
	   <aop:config proxy-target-class="false">
	       <aop:pointcut expression="execution(* com.moutum.csmp.service.impl.*.*(..))" id="serviceMethod"/>
	       <aop:advisor advice-ref="txadvice" pointcut-ref="serviceMethod"/>
	   </aop:config>
</beans:beans>